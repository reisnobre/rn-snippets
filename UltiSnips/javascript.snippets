extends vuex
snippet rn:log "console.log(...)" b
console.log($0)
endsnippet


snippet rntm "timeout" b
setTimeout(() => {
	$0
}, 300)
endsnippet

snippet rnc:method "Method" b
/**
 * Description 
 *
 * @param {Type} name - Description
 * @public
 */
$0 () {
}
endsnippet

snippet rnc:mvue "Main Vue File" b
import Vue from 'vue'
import App from './App.vue'
import router from './router'
import store from './store'

import './registerServiceWorker'

// import { api } from './config'

Vue.config.productionTip = false
// Vue.prototype.$api = api // Setting the default communication function

new Vue({
  router,
  store,
  render: h => h(App)
}).$mount('#app')
endsnippet

snippet rnc:router "Router File" b
import Vue from 'vue'
import Router from 'vue-router'
Vue.use(Router)

import $0 from `!p snip.rv = t[1].lower()`

export default new Router({
	mode: 'history',
  base: process.env.NODE_ENV === 'production' ? '/' : '/',
  routes: [
    {
      path: '',
      name: '`!p snip.rv = t[0].lower()`',
      component: $0
    }
  ]
})
endsnippet

snippet rnc:debounced:watch "Debounced watch propertie" b
$1: _.debounce(function ($2) {
}, $3)
endsnippet

snippet rnc:debounced:store:computed "Debounced computed propertie" b
$1: {
	get () {
		return this.$store.getters.$2
	},
	set: _.debounce(function ($3) {
	}, $4)
},
endsnippet
