extends html, javascript, css, scss

snippet rnv:c:page "Create page" b
<template>
	<main class="$0" id="$1">

	</main>
</template>

<script>
export default {
  name: '$1'
}
</script>
<docs>
This is a view of the project
</docs>
endsnippet

snippet rnv:c:component "Create Component base" b
<template>
	<div class="$0" id="$1">
	</div>
</template>

<script>
export default {
  name: '$1'
}
</script>
endsnippet

snippet rnv:c:router:view "Create Router view"
<transition name="fade" mode="out-in">
	<router-view/>
</transition>
endsnippet

snippet rnv:c:router:link "Create Router Link"
<router-link :to="{ name: '$1', query: { $2 }, params: { $3 } }" tag="${4:a}">$5</router-link>
endsnippet

snippet rnv:c:b:table "Create a bulma table"
	<b-table
		:data="$1"
		:selected.sync="$1s"
		>
		<template slot-scope="props">
			<b-table-column field="slug" label="Nome">
			</b-table-column>
		</template>
		<template slot="empty">
			<section class="section">
				<div class="content has-text-grey has-text-centered">
					<p>
					<b-icon
						icon="sad-tear"
						size="is-large">
					</b-icon>
					</p>
					<p>Nothing here.</p>
				</div>
			</section>
		</template>
	</b-table>
	<!-- MOVE THE CODE DOWN TO THE COMPUTED SECTION -->
	$1: {
		get () {
			return this.$store.getters['$1Store/$1']
		},
		set ($1) {
			this.$store.dispatch('$1Store/set$1Index', $1)
		}
	}
endsnippet

snippet rnv:c:b:input "Create a bulma input"
<b-field label="$1">
	<b-input v-model="$2" type="$3"></b-input>
</b-field>
endsnippet

snippet rnv:c:b:button "Create a bulma button"
<b-button>$1</b-field>
endsnippet

snippet rnv:c:b:icon-button "Create a bulma button"
<b-button size="is-$1" icon-left="$2">
	$3
</b-button>
endsnippet
